description: >
  This command will pass a job (or individual node of a parallel job) fast on retries when it has previously succeeded in this pipeline.
  This preserves previous artifacts and optionally resubmits test results so that the resulting
  job report and artifacts are consistent.
  This command should be the first step in your job and all other steps should be provided as the `steps` parameter.
parameters:
  pipeline-id:
    type: string
    description: The CircleCI Pipeline ID ( << pipeline.id >> )
  test-results:
    type: string
    description: Path for previous test results, must have been stored as an artifact
    default: ""
  steps:
    type: steps
    description: Job steps to execute if not passing fast
environment:
  CIRCLE_PIPELINE_ID: << parameters.pipeline-id >>
steps:
  - restore_cache:
      name: Getting job history
      keys:
        - pass-{{ .Environment.CIRCLE_JOB }}-{{ .Environment.CIRCLE_NODE_INDEX }}-$CIRCLE_PIPELINE_ID
  - run:
      name: Restoring previous artifacts
      command: << include(scripts/pass-fast.sh) >>
  - store_artifacts:
      name: Storing restored artifacts
      path: .
      destination: ""
  - when:
      condition:
        not:
          equal: [ "", << parameters.test-results >> ]
      steps:
        - store_test_results:
            name: Upload previous test results for CircleCi
            path: << parameters.test-results >>
  - run:
      name: Pass fast if we have a previous pass of this job in this pipeline
      command: |
        if [ "$PASS_FAST" = "true" ]; then
          echo "This job has succeeded previously in this pipeline skipping..."
          circleci-agent step halt
        fi
  - steps: << parameters.steps >>
  - run:
      name: Recording job success for this revision
      command: |
        mkdir .pass
        PASS=$(echo "$CIRCLE_JOB-$CIRCLE_NODE_INDEX-$CIRCLE_PIPELINE_ID" | sed -e "s/[^[:alnum:]]/-/g" | tr -s "-" | tr A-Z a-z)
        echo "Success!" > ".pass/$PASS"
  - save_cache:
      name: Saving job success for this revision
      key: pass-{{ .Environment.CIRCLE_JOB }}-{{ .Environment.CIRCLE_NODE_INDEX }}-$CIRCLE_PIPELINE_ID
      paths:
        - .pass